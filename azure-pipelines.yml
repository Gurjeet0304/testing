# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
 branches:
   include:
     - master
 paths:
   exclude:
     - charts/*

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'f0dcb767-4145-430f-8674-8955f05a0ef1'
  imageRepository: 'gurjeettesting'
  containerRegistry: 'gurjeet.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  
  # Agent VM image name
  vmImageName: 'inhouse'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
     name: inhouse
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - bash: |
          rm -rf *
          git clone git@github.com:Gurjeet0304/testing.git
          git config --global user.email "gurjeetsahi@gmail.com"
          git config --global user.name "Gurjeet0304"
          cd testing
          sed -i "s,gurjeet.azurecr.io/.*,$(containerRegistry)/$(imageRepository):$(tag),g" charts/values.yaml
          cp -rf hello.yaml $(Agent.HomeDirectory)
          git commit -a -m "$(tag)"
          git push origin

    - task: HelmInstaller@1
      inputs:
        helmVersionToInstall: 'latest'

    - task: HelmDeploy@0
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceConnection: 'mykube'
        command: 'package'
        chartPath: 'testing/charts'
        #updateDependency: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

 #   - task: CopyFiles@2
 #     inputs:
  #      SourceFolder: '$(Agent.HomeDirectory)'
  #      Contents: 'hello.yaml'
  #      TargetFolder: '$(Build.ArtifactStagingDirectory)'

    #- task: PublishBuildArtifacts@1
    #  inputs:
    #    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    #    ArtifactName: 'drop'
    #    publishLocation: 'Container'
    


    
